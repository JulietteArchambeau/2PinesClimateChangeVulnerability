---
title: "Explore climatic data"
author: "Juliette Archambeau"
date: "`r format(Sys.time(), '%d %B, %Y')`"
number-sections: true
format: 
  html:
    toc: true
    toc-depth: 4
    code-fold: true
    page-layout: full
embed-resources: true
bibliography: references.bib
editor_options: 
  chunk_output_type: console
---

<style type="text/css">
body {
   font-size: 15px;
}
code.r{
  font-size: 11px;
}
pre {
  font-size: 11px
}

table {
  font-size: 10px
}
</style>

```{r setup, include=FALSE}
knitr::opts_chunk$set(fig.width = 5,fig.height = 4,cache=F)
options(width = 300)
library(knitr)
library(tidyverse)
library(readxl)
library(magrittr)
library(kableExtra)
library(here)
library(sf)
library(raster)
library(ncdf4)


# my own function for building tables in reports
source(here("scripts/functions/kable_mydf.R"))
```

# The CHESS-SCAPE climatic data

CHESS-SCAPE: High resolution future projections of multiple climate scenarios for the United Kingdom derived from downscaled UKCP18 regional climate model output

Dataset available in the CEDA archive: <https://catalogue.ceda.ac.uk/uuid/8194b416cbee482b89e0dfbe17c5786c>

Associated paper: @robinsonCHESSSCAPEHighResolution2023.

Important features :

  - 1 km resolution
  
  - 11 near-surface meteorological variables 
  
  - 4 ensemble members (EMs), which were chosen to span the range of temperature and precipitation change in the UKCP18 ensemble, representing the ensemble climate model uncertainty.

  - 4 Representative Concentration Pathways (RCPs): RCP2.6, 4.5, 6.0 and 8.5.
  
  - bias-correction based on the CHESS-met historical gridded dataset.


Quote from Robinson et al. (2023) about bias correction: "Finally, although the free parameters of climate models are usually calibrated against historical observations, because the models are free-running, internal variability means that each realisation of the future climate will not necessarily replicate the historical period exactly — the models may be ‘biased’ with respect to observations. Bias correction is often applied to remove or reduce these biases (Teutschbein and Seibert, 2012). A variety of bias correction methods of varying complexity exist, from simple methods that adjust the mean (eg. linear scaling (Widmann et al., 2003)), to more complex methods that also adjust the distribution of variables (eg. quantile mapping (Leander and Buishand, 2007)). These are carried out by **comparing** the **climate model output** run for a historical period with **observations** in that period, **calculating a correction** based on this, then **applying that correction to the whole of the climate model output**. There must therefore be a sufficient overlap between the climate model output and observations and the observations must be of sufficient quality. Bias correction involves the **strong assumption that the same biases will be preserved in the future**, which has led to some criticism of the use of bias correction (Maraun, 2016; Ehret et al., 2012). However, for many instances of impacts modelling, raw climate model output is not sufficient if it is biased."
  

# Extracting CHESS-SCAPE climatic data

```{r ExtractChessScapeClimData, eval=F}
# Path to chess Scape climatic data
ceda_clim_path <- "data/ScotsPine/Climate/ftp.ceda.ac.uk/badc/deposited2021/chess-scape/data/"

# We extract climatic data:
  # for two RCPs (with or without bias correction)
vec_rcp_scenario <- list.files(here(ceda_clim_path))

  # for four ensemble members
vec_ensemble_member <- list.files(here(paste0(ceda_clim_path,vec_rcp_scenario[[1]])))

  # for three time periods
vec_timeslice <- list(c("1980","2000"),c("2030","2050"),c("2060","2080"))
  
extract_netCDF_data <- function(ceda_clim_path, rcp_scenario, ensemble_member, clim_var, timeslice){
  
# Read netCDF file
nc_file <- paste0(ceda_clim_path,rcp_scenario,"/",ensemble_member,"/timeslice/",clim_var,
                  "/chess-scape_",rcp_scenario,"_",ensemble_member,"_",clim_var,"_uk_1km_timeslice_",timeslice[[1]],"1201-",timeslice[[2]],"1130.nc")

nc_data <- brick(here(nc_file))

# # New names for the layers
# names(nc_data) <- names(nc_data) %>%
#   str_extract("\\.(\\d{2})\\.") %>% # Extract MM part
#   str_replace_all("\\.", "") %>%    # Remove '.' characters
#   str_replace("^", "month_")        # Prepend 'month_'


# I think there is a mistake with the names, the first name should be January month and not September.
# Data are coherent with the names in the order January -> December (and not the current names of the brick)

names(nc_data) <- sprintf("month_%02d", 1:12)

# Read spatial points
points_file <- "data/ScotsPine/population_coordinates.csv"
points_data <- read_csv(here(points_file))

# Define function to transform coordinates from WGS84 to OSGB
transform_coordinates <- function(lon, lat) {
  # Create spatial points object
  points <- st_as_sf(data.frame(lon = lon, lat = lat), coords = c("lon", "lat"), crs = 4326)
  
 # Transform to OSGB projection (EPSG:27700)
  points_transformed <- st_transform(points, crs = 27700)
  
  return(points_transformed)
}

# Transform spatial points to OSGB projection
points_sf <- transform_coordinates(points_data$Longitude, points_data$Latitude)

# Extract climatic data at spatial points
extracted_data <- raster::extract(nc_data, as.matrix(st_coordinates(points_sf))) %>%
  as_tibble() %>% 
  mutate(seas_djf = rowMeans(dplyr::select(.,month_12,month_01,month_02)),
         seas_mam = rowMeans(dplyr::select(.,month_03,month_04,month_05)),
         seas_jja = rowMeans(dplyr::select(.,month_06,month_07,month_08)),
         seas_son = rowMeans(dplyr::select(.,month_09,month_10,month_11)),
         annual = rowMeans(.))
  

# Combine extracted data with original points data
points_data <- points_data %>%
  bind_cols(extracted_data) %>% 
  mutate(clim_var=clim_var,
         ensemble_member = ensemble_member,
         rcp_scenario = rcp_scenario,
         timeslice = paste0(timeslice[[1]],"_",timeslice[[2]]))

return(points_data)
}


climdf <- lapply(vec_rcp_scenario, function(rcp_scenario){
  
  lapply(vec_ensemble_member, function(ensemble_member){
    
    vec_clim_var <- list.files(here(paste0(ceda_clim_path,rcp_scenario,"/",ensemble_member,"/timeslice")))
    
    lapply(vec_clim_var, function(clim_var){
      
      lapply(vec_timeslice, function(timeslice){
        
        extract_netCDF_data(ceda_clim_path, rcp_scenario,ensemble_member,clim_var,timeslice)
        
      }) %>% bind_rows()
    }) %>% bind_rows()
  }) %>% bind_rows()
}) %>% bind_rows()

saveRDS(climdf, file=here("data/ScotsPine/Climate/climdf.rds"))
saveRDS(climdf, file=here("shinny/VizClimateDifferencesScotsPine/climdf.rds"))
```

```{r LoadClimdf}
climdf <- readRDS(here("data/ScotsPine/Climate/climdf.rds"))
```


```{r CalculateClimDifferencesBtwCurrentFutureClimates, echo=F, eval=F}
# calculate relative climate differences between current (1980-2000) and future climates (2060-2080)
climdiff <- climdf %>% 
  pivot_longer(names_to = "time_averages", values_to = "value",cols=contains(c("month","seas","annual"))) %>% 
  pivot_wider(names_from = timeslice, values_from = value, names_prefix = "timeslice_") %>% 
  mutate(abs_diff = timeslice_2060_2080 - timeslice_1980_2000,
         rel_diff = (timeslice_2060_2080 - timeslice_1980_2000) * 100 / timeslice_2060_2080) %>% 
  arrange(desc(abs(rel_diff)))

climdiff %>% dplyr::filter(rcp_scenario %in% c("rcp26","rcp85")) %>% slice(1:30) %>%  kable_mydf()
```

# Viz climatic differences bwt current and future climates 

The differences between current and future climates at the location of the populations can be visualized with the following shinny app : <https://juliettearchambeau.shinyapps.io/VizClimateDifferencesScotsPine/>.

**Correlations among climatic variables**

Wind speed (*sfcWind*), surface downwelling shortwave radiation (*rsds*), and to a lesser extent the precipitation flux (*pr*) show low correlations with the other climatic variables. 

**Correlations among time averages**

For most climatic variables, seasonal and annual averages are highly correlated. 

Some exceptions: 

- daily near-surface air temperature range (*dtr*) in summer vs winter.

- near-surface relative humidity (*hurs*) in summer vs the other seasons and the annual value.

- surface downwelling shortwave radiation (*rsds*) across the different seasons.


**Climate differences across time slices**

- Daily near-surface air temperature range (*dtr*):
  
  - is expected to increase in summer (agreement between the four ensemble members and the two RCP scenarios).
  
  - is expected to decrease in winter (and March) according to EM 01, 04 and 06 + RCP2.6 and RCP8.5, and EM 15 + RCP8.5, but expected to remain stable according to the EM 15 + RCP2.6.
  
  - is expected to either increase or decrease annually depending on the populations, the EM and RCP scenarios.
  
  - is expected to either increase or decrease in fall depending on the EM, the RCP scenario and even the time slice (e.g., EM01 and RCP8.5).
  
  - take-home message: Do not select the annual average of *dtr* as opposite future trends are expected for summer vs winter months.
  
- Near-surface relative humidity (*hurs*)

  - is globally expected to decrease (some exceptions for some populations, e.g., with EM06 + RCP8.5 and summer average).
  
  - sharper decrease in summer vs winter. And higher variation in the climate differences between time slices in summer vs winter. 
  
  - take-home message: using near-surface relative humidity (*hurs*) in summer may allow us to capture more variation in climatic differences among populations. 
  
- Near-surface specific humidity (*huss*)

  - is expected to increase. Large agreement across EM, RCP scenarios and time averages.
  
  - low variation among populations regarding the extent to which *huss* is going to increase (but variation among EM). 
  
  - take-home message: the annual average can be used and it is well representative of monthly and seasonal time averages.
  
- Precipitation flux (*pr*)

  - No agreement among EM and RCP scenarios. 
  
  - Climatic differences across time slices are expected to be different across seasons.
  
  - take home: important not to include the annual average. 
  
- Surface air pressure (*psurf*)

  - small differences across time slices. 
  
  - take-home message: may not be relevant to include. 
  
- Surface downwelling longwave radiation  (*rlds*)

  - expected to increase. Large agreement across EM, RCP scenarios and time averages. 
  
  - Low (almost not) variation among populations.
  
- Surface downwelling shortwave radiation (*rsds*)

  - Expected to increase, mostly during summer (higher absolute difference in summer than in winter, but similar relative difference).
  
- Wind speed (*sfcWind*)

  - No agreement among EM and time slices in winter. 
  
  - generally expected to decrease in summer. 
  
- Near-surface air temperature (*tas*), near-surface daily maximum air temperature 	(*tasmax*) and near-surface daily minimum air temperature (*tasmin*).

  - Strong agreement among EM, RCP scenario and time averages. 
  
  - take-home message: choosing only one of these variables is sufficient. Annual time average could be ok as well representative of the other time averages.
  
# Selected variables

```{r SubsetSelectedVariables}
# Selected variables
selected_clim_var_avg <- c("pr_seas_jja", # Precipitation fluxes in summer and winter 
                           "sfcWind_seas_djf", # Winter winds
                           "tas_annual", # Mean annual temperature
                           "rsds_seas_jja", # Surface downwelling shortwave radiation in summer
                           "hurs_seas_jja" # Near-surface relative humidity in summer
                           #"dtr_seas_djf","dtr_seas_jja" # Daily near-surface air temperature range in summer and winter
                           )


subdf <- climdf %>% 
  pivot_longer(names_to = "time_averages", values_to = "value",cols=contains(c("month","seas","annual"))) %>% 
  mutate(clim_var_avg = paste0(clim_var,"_",time_averages)) %>% 
  dplyr::filter(clim_var_avg %in% selected_clim_var_avg & rcp_scenario %in% c("rcp26_bias-corrected","rcp85_bias-corrected")) %>% 
  # dplyr::filter((clim_var_avg %in% selected_clim_var_avg[!grepl("dtr", selected_clim_var_avg)] & rcp_scenario %in% c("rcp26_bias-corrected","rcp85_bias-corrected")) | clim_var_avg %in% selected_clim_var_avg[grepl("dtr", selected_clim_var_avg)] ) %>% 
  dplyr::mutate(rcp_scenario = str_sub(rcp_scenario, 1,5) %>% toupper %>% str_replace("RCP(\\d)(\\d)", "RCP\\1.\\2"),
                timeslice = str_replace(timeslice, "_","-"))

saveRDS(subdf, file=here("data/ScotsPine/subdf.rds"))
saveRDS(subdf, file=here("shinny/VizClimateDifferencesScotsPine_SelectedVariables/subdf.rds"))
```

Correlations among the selected climatic variables can be visualized with the following shinny app: <https://juliettearchambeau.shinyapps.io/VizClimateDifferencesScotsPine_SelectedVariables/>.

